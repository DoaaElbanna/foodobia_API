# Generated by Django 2.1.4 on 2019-03-17 13:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Diseases',
            fields=[
                ('disease_id', models.AutoField(db_column='disease-id', primary_key=True, serialize=False)),
                ('disease_name', models.TextField(blank=True, db_column='disease-name', null=True)),
            ],
            options={
                'db_table': 'diseases',
            },
        ),
        migrations.CreateModel(
            name='FoodCategroies',
            fields=[
                ('categ_id', models.AutoField(db_column='categ-id', primary_key=True, serialize=False)),
                ('categ_name', models.CharField(blank=True, db_column='categ-name', max_length=45, null=True)),
            ],
            options={
                'db_table': 'food_categroies',
            },
        ),
        migrations.CreateModel(
            name='Ingrediants',
            fields=[
                ('ingrediants_id', models.AutoField(db_column='ingrediants-id', primary_key=True, serialize=False)),
                ('ingrediants_name', models.CharField(blank=True, db_column='ingrediants-name', max_length=45, null=True)),
                ('carbs', models.FloatField(blank=True, null=True)),
                ('fats', models.FloatField(blank=True, null=True)),
                ('protein', models.FloatField(blank=True, null=True)),
                ('sugar', models.FloatField(blank=True, null=True)),
                ('sodium', models.FloatField(blank=True, null=True)),
                ('calories', models.FloatField(blank=True, null=True)),
                ('is_countable', models.IntegerField(db_column='is-countable')),
            ],
            options={
                'db_table': 'ingrediants',
            },
        ),
        migrations.CreateModel(
            name='Meals',
            fields=[
                ('meal_id', models.AutoField(db_column='meal-id', primary_key=True, serialize=False)),
                ('meal_name', models.CharField(blank=True, db_column='meal-name', max_length=45, null=True, unique=True)),
                ('meal_image', models.TextField(blank=True, db_column='meal-image', null=True)),
                ('meal_ingrediants', models.TextField(blank=True, db_column='meal-ingrediants', null=True)),
                ('meal_calories', models.FloatField(blank=True, db_column='meal-calories', null=True)),
                ('like_counter', models.IntegerField(blank=True, db_column='like-counter', null=True)),
                ('dislike_counter', models.IntegerField(blank=True, db_column='dislike-counter', null=True)),
                ('meal_description', models.TextField(blank=True, db_column='meal-description', null=True)),
            ],
            options={
                'db_table': 'meals',
            },
        ),
        migrations.CreateModel(
            name='ProhibitedMeals',
            fields=[
                ('meal_id', models.IntegerField(db_column='meal-id', primary_key=True, serialize=False)),
                ('disease_id', models.IntegerField(blank=True, db_column='disease-id', null=True)),
            ],
            options={
                'db_table': 'prohibited_meals',
            },
        ),
        migrations.CreateModel(
            name='users',
            fields=[
                ('user_id', models.AutoField(db_column='user-id', primary_key=True, serialize=False)),
                ('gmail_id', models.BigIntegerField(blank=True, db_column='gmail-id', null=True)),
                ('user_name', models.CharField(blank=True, db_column='user-name', max_length=45, null=True, unique=True)),
                ('user_firstname', models.CharField(blank=True, db_column='user-firstname', max_length=45, null=True)),
                ('user_lastname', models.CharField(blank=True, db_column='user-lastname', max_length=45, null=True)),
                ('user_image', models.TextField(blank=True, db_column='user-image', null=True)),
                ('user_pass', models.CharField(db_column='user-pass', max_length=255)),
                ('user_email', models.CharField(blank=True, db_column='user-email', max_length=45, null=True)),
                ('user_birthdate', models.DateField(blank=True, db_column='user-birthdate', null=True)),
                ('user_gender', models.IntegerField(blank=True, db_column='user-gender', null=True)),
                ('user_length', models.IntegerField(blank=True, db_column='user-length', null=True)),
                ('user_weight', models.CharField(blank=True, db_column='user-weight', max_length=45, null=True)),
                ('user_activetylevel', models.IntegerField(blank=True, db_column='user-activetylevel', null=True)),
                ('is_diabetes', models.IntegerField(blank=True, db_column='is-diabetes', null=True)),
                ('saved_meals', models.TextField(blank=True, db_column='saved-meals', null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.AddField(
            model_name='meals',
            name='users_user_id',
            field=models.ForeignKey(db_column='users_user-id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.users'),
        ),
        migrations.AddField(
            model_name='diseases',
            name='users_user_id',
            field=models.ForeignKey(db_column='users_user-id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.users'),
        ),
    ]
